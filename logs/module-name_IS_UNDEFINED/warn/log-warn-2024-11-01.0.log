2024-11-01 22:35:21 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:35:21 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:35:23 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[user-service] & group[DEFAULT_GROUP]
2024-11-01 22:35:23 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[user-service.yaml] & group[DEFAULT_GROUP]
2024-11-01 22:35:23 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[user-service-dev.yaml] & group[DEFAULT_GROUP]
2024-11-01 22:35:23 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:35:23 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:35:25 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[search-service] & group[DEFAULT_GROUP]
2024-11-01 22:35:25 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[search-service.yaml] & group[DEFAULT_GROUP]
2024-11-01 22:35:25 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[search-service-dev.yaml] & group[DEFAULT_GROUP]
2024-11-01 22:35:27 |WARN  |pool-4-thread-1 |ZipkinAutoConfiguration.java:164 |org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration |Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:9411/api/v2/spans": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect}]
2024-11-01 22:35:28 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-01 22:35:28 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:35:28 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:35:30 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[notice-service] & group[DEFAULT_GROUP]
2024-11-01 22:35:30 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[notice-service.yaml] & group[DEFAULT_GROUP]
2024-11-01 22:35:30 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[notice-service-dev.yaml] & group[DEFAULT_GROUP]
2024-11-01 22:35:30 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:35:30 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:35:31 |WARN  |pool-4-thread-1 |ZipkinAutoConfiguration.java:164 |org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration |Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:9411/api/v2/spans": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect}]
2024-11-01 22:35:32 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-01 22:35:32 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[video-service] & group[DEFAULT_GROUP]
2024-11-01 22:35:32 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[video-service.yaml] & group[DEFAULT_GROUP]
2024-11-01 22:35:32 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[video-service-dev.yaml] & group[DEFAULT_GROUP]
2024-11-01 22:35:33 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:35:33 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:35:34 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[gateway-service] & group[DEFAULT_GROUP]
2024-11-01 22:35:34 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[gateway-service.properties] & group[DEFAULT_GROUP]
2024-11-01 22:35:35 |WARN  |main |Logger.java:44 |org.mybatis.spring.mapper.ClassPathMapperScanner |No MyBatis mapper was found in '[com.bilibili.gateway]' package. Please check your configuration.
2024-11-01 22:35:36 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-01 22:35:37 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-01 22:35:38 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-01 22:37:29 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:37:29 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:37:30 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[chat-service] & group[DEFAULT_GROUP]
2024-11-01 22:37:30 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[chat-service.yaml] & group[DEFAULT_GROUP]
2024-11-01 22:37:30 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[chat-service-dev.yaml] & group[DEFAULT_GROUP]
2024-11-01 22:37:34 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-01 22:37:47 |WARN  |Thread-1 |HttpClientBeanHolder.java:108 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Start destroying common HttpClient
2024-11-01 22:37:47 |WARN  |Thread-5 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-11-01 22:37:47 |WARN  |Thread-5 |NotifyCenter.java:153 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Destruction of the end
2024-11-01 22:37:47 |WARN  |Thread-1 |HttpClientBeanHolder.java:114 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Destruction of the end
2024-11-01 22:37:51 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:37:51 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:37:52 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[user-service] & group[DEFAULT_GROUP]
2024-11-01 22:37:52 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[user-service.yaml] & group[DEFAULT_GROUP]
2024-11-01 22:37:52 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[user-service-dev.yaml] & group[DEFAULT_GROUP]
2024-11-01 22:37:55 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-01 22:45:27 |WARN  |Thread-5 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-11-01 22:45:27 |WARN  |Thread-5 |NotifyCenter.java:153 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Destruction of the end
2024-11-01 22:45:27 |WARN  |Thread-1 |HttpClientBeanHolder.java:108 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Start destroying common HttpClient
2024-11-01 22:45:27 |WARN  |Thread-1 |HttpClientBeanHolder.java:114 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Destruction of the end
2024-11-01 22:45:32 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:45:32 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:45:34 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[search-service] & group[DEFAULT_GROUP]
2024-11-01 22:45:34 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[search-service.yaml] & group[DEFAULT_GROUP]
2024-11-01 22:45:34 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[search-service-dev.yaml] & group[DEFAULT_GROUP]
2024-11-01 22:45:35 |WARN  |pool-4-thread-1 |ZipkinAutoConfiguration.java:164 |org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration |Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:9411/api/v2/spans": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect}]
2024-11-01 22:45:38 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-01 22:46:04 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:46:04 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:46:05 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[search-service] & group[DEFAULT_GROUP]
2024-11-01 22:46:05 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[search-service.yaml] & group[DEFAULT_GROUP]
2024-11-01 22:46:05 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[search-service-dev.yaml] & group[DEFAULT_GROUP]
2024-11-01 22:46:07 |WARN  |pool-4-thread-1 |ZipkinAutoConfiguration.java:164 |org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration |Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:9411/api/v2/spans": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect}]
2024-11-01 22:46:10 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-01 22:46:11 |WARN  |main |AbstractApplicationContext.java:591 |org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext |Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8082 is already in use
2024-11-01 22:46:13 |WARN  |main |AsyncReporter.java:342 |zipkin2.reporter.AsyncReporter$BoundedAsyncReporter |Timed out waiting for in-flight spans to send
2024-11-01 22:46:14 |WARN  |Thread-5 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-11-01 22:46:29 |WARN  |Thread-5 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-11-01 22:46:29 |WARN  |Thread-5 |NotifyCenter.java:153 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Destruction of the end
2024-11-01 22:46:29 |WARN  |Thread-1 |HttpClientBeanHolder.java:108 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Start destroying common HttpClient
2024-11-01 22:46:29 |WARN  |Thread-1 |HttpClientBeanHolder.java:114 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Destruction of the end
2024-11-01 22:46:40 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:46:40 |WARN  |main |Reflections.java:179 |org.reflections.Reflections |given scan urls are empty. set urls in the configuration
2024-11-01 22:46:41 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[search-service] & group[DEFAULT_GROUP]
2024-11-01 22:46:41 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[search-service.yaml] & group[DEFAULT_GROUP]
2024-11-01 22:46:41 |WARN  |main |NacosPropertySourceBuilder.java:87 |com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder |Ignore the empty nacos configuration and get it based on dataId[search-service-dev.yaml] & group[DEFAULT_GROUP]
2024-11-01 22:46:43 |WARN  |pool-4-thread-1 |ZipkinAutoConfiguration.java:164 |org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinAutoConfiguration |Check result of the [RestTemplateSender{http://localhost:9411/api/v2/spans}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:9411/api/v2/spans": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect}]
2024-11-01 22:46:46 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-11-01 22:51:30 |WARN  |Thread-1 |HttpClientBeanHolder.java:108 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Start destroying common HttpClient
2024-11-01 22:51:30 |WARN  |Thread-5 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-11-01 22:51:30 |WARN  |Thread-5 |NotifyCenter.java:153 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Destruction of the end
2024-11-01 22:51:30 |WARN  |Thread-1 |HttpClientBeanHolder.java:114 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Destruction of the end
2024-11-01 22:51:30 |WARN  |Thread-5 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-11-01 22:51:30 |WARN  |Thread-1 |HttpClientBeanHolder.java:108 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Start destroying common HttpClient
2024-11-01 22:51:30 |WARN  |Thread-5 |NotifyCenter.java:153 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Destruction of the end
2024-11-01 22:51:30 |WARN  |Thread-1 |HttpClientBeanHolder.java:114 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Destruction of the end
2024-11-01 22:51:30 |WARN  |Thread-1 |HttpClientBeanHolder.java:108 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Start destroying common HttpClient
2024-11-01 22:51:30 |WARN  |Thread-5 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-11-01 22:51:30 |WARN  |Thread-5 |NotifyCenter.java:153 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Destruction of the end
2024-11-01 22:51:30 |WARN  |Thread-1 |HttpClientBeanHolder.java:114 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Destruction of the end
2024-11-01 22:51:30 |WARN  |Thread-1 |HttpClientBeanHolder.java:108 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Start destroying common HttpClient
2024-11-01 22:51:30 |WARN  |Thread-5 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-11-01 22:51:30 |WARN  |Thread-5 |NotifyCenter.java:153 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Destruction of the end
2024-11-01 22:51:30 |WARN  |Thread-1 |HttpClientBeanHolder.java:114 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Destruction of the end
2024-11-01 22:51:30 |WARN  |Thread-1 |HttpClientBeanHolder.java:108 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Start destroying common HttpClient
2024-11-01 22:51:30 |WARN  |Thread-5 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-11-01 22:51:30 |WARN  |Thread-5 |NotifyCenter.java:153 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Destruction of the end
2024-11-01 22:51:30 |WARN  |Thread-1 |HttpClientBeanHolder.java:114 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Destruction of the end
2024-11-01 22:51:30 |WARN  |Thread-5 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-11-01 22:51:30 |WARN  |Thread-1 |HttpClientBeanHolder.java:108 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Start destroying common HttpClient
2024-11-01 22:51:30 |WARN  |Thread-5 |NotifyCenter.java:153 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Destruction of the end
2024-11-01 22:51:30 |WARN  |Thread-1 |HttpClientBeanHolder.java:114 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Destruction of the end
